#compatability package recommended in google api thing
import credential_holder
import oauth2client.file.Storage

from __future__ 
import print_function
#lets me open spreadsheet by url :D
import gspread
#pandas- lib for data analysis
import pandas as pd
#hold secretysecret file
import json

store = oauth2client.file.Storage()

jsonobj = json()

#Might have to use json.dump and then do this, dunno yet. This is to tell google's API that it can trust me

#Is the oauth credential object the same as the oauth client id generated by google's API?
gspread.authorize({"installed":{"client_id":"212582174995-egcv2ef4k3759dg2b28beathbepk8jsh.apps.googleusercontent.com","project_id":"machinelearningthing","auth_uri":"https://accounts.google.com/o/oauth2/auth","token_uri":"https://accounts.google.com/o/oauth2/token","auth_provider_x509_cert_url":"https://www.googleapis.com/oauth2/v1/certs","client_secret":"VtgBG-ikYK57-ss2SIuo05iS","redirect_uris":["urn:ietf:wg:oauth:2.0:oob","http://localhost"]}})
#json.dump({"installed":{"client_id":"212582174995-egcv2ef4k3759dg2b28beathbepk8jsh.apps.googleusercontent.com","project_id":"machinelearningthing","auth_uri":"https://accounts.google.com/o/oauth2/auth","token_uri":"https://accounts.google.com/o/oauth2/token","auth_provider_x509_cert_url":"https://www.googleapis.com/oauth2/v1/certs","client_secret":"VtgBG-ikYK57-ss2SIuo05iS","redirect_uris":["urn:ietf:wg:oauth:2.0:oob","http://localhost"]}})



usinggspread = gspread.Client()

usinggspread.open_by_url(https://docs.google.com/forms/d/16ranH8mONW_E940YF5Lzb57r_DmTCwXcZoO_ok0NDEg/edit)

#using Storage for json authorization instead of SignedJwtAssertionCredentials b/c the internet was angry; it's been discontinued
class CredentialExchangeUser:
#put creds in holder
def putcredentials(credential_holder):
    store.locked_put(credential_holder)
